{"version":3,"sources":["Components/Header.js","Utils/downloadImage.js","Components/displayMeme.js","Components/canvas.js","Components/MemeGen.js","Components/footer.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","color","Header","classes","useState","message","setMessage","AppBar","position","className","Toolbar","IconButton","edge","aria-label","Typography","variant","src","alt","height","width","htmlFor","type","id","onChange","e","invertedNodes","document","querySelectorAll","body","classList","toggle","forEach","node","handleDownloadClick","event","preventDefault","image","getElementById","toDataURL","img","Image","crossOrigin","href","link","createElement","download","click","displayMeme","props","texts","state","onSubmit","handleSubmit","map","text","key","name","placeholder","value","handleTextChange","bind","Tooltip","placement","arrow","handleColorChange","borderColor","handleBorderColorChange","size","handleTextSizeChange","onClick","handleRemoveText","handleAddText","handleRandomMemeClick","handleFileChange","canvas","checkImageHeight","maxHeight","newheight","newwidth","MemeGenerator","getPos","el","lx","ly","offsetLeft","offsetTop","offsetParent","x","y","textHittest","textIndex","handleMouseDown","offset","offsetX","offsetY","console","log","startX","parseInt","clientX","startY","clientY","i","length","selectedText","handleMouseMove","dx","dy","mouseX","mouseY","setState","handleMouseUp","handleMouseOut","componentDidMount","url","context","getContext","fetch","then","response","json","memes","data","allMemeImgs","onmousedown","onmousemove","onmouseup","onmouseout","componentDidUpdate","setImage","onload","drawImage","font","strokeStyle","strokeText","fillStyle","fillText","target","setTimeout","handleChange","eventType","canvasText","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","push","slice","randNum","Math","floor","random","updateImage","scope","window","URL","createObjectURL","files","this","undefined","topText","bottomText","bottomColor","bottomBorderColor","innerHeight","Component","Footer","Provider","role","App","data-theme","MemeGen","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9bc3a970.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      color: 'white',\r\n    },\r\n  }));\r\n\r\nfunction Header() {\r\n\r\n    const classes = useStyles();\r\n    const [ message, setMessage ] = useState(false)\r\n\r\n    const switchTheme = (e) => {\r\n        const invertedNodes = document.querySelectorAll('.inverted')\r\n        document.body.classList.toggle('inverted-theme')\r\n        invertedNodes.forEach(node => node.classList.toggle('inverted-theme'))\r\n        setMessage(!message) \r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"static\" className=\"inverted-theme\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    <img \r\n                        className=\"inverted inverted-theme\"\r\n                        src=\"https://upload.wikimedia.org/wikipedia/en/9/9a/Trollface_non-free.png\" \r\n                        // src=\"http://assets.stickpng.com/images/580b585b2edbce24c47b2a2f.png\"\r\n                        alt=\"Problem?\"\r\n                        height=\"50px\"\r\n                        width=\"50px\"\r\n                    />\r\n                </Typography>\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                    <p>Memeify</p>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                <label className=\"theme-switch\" htmlFor=\"checkbox\">\r\n                    <input type=\"checkbox\" id=\"checkbox\" onChange={switchTheme}/>\r\n                    <div className=\"slider round\"></div>\r\n                </label>\r\n\r\n\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header","const handleDownloadClick = (event) => {\n    event.preventDefault();\n    var canvas = document.getElementById(\"my-canvas\")\n    var image = canvas.toDataURL(\"image/jpeg\");\n    var img = new Image();\n    img.crossOrigin=\"anonymous\"\n    img.href=image\n    var link = document.createElement('a');\n    link.download = \"meme.jpeg\"\n    link.href=image \n    link.click()\n}\n\nexport default handleDownloadClick;","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { MdFileDownload, MdFileUpload, MdShuffle } from 'react-icons/md/index';\nimport handleDownloadClick from '../Utils/downloadImage'\n\nfunction displayMeme(props){\n    const {texts} = props.state;\n    return (\n        <form className=\"meme-form\" onSubmit={ props.handleSubmit } >\n            {\n                texts.map(text => (\n                    <div key={text.id*10}>\n                        <input\n                            className=\"input\"\n                            key={text.id}\n                            type=\"text\"\n                            name={text.text}\n                            placeholder=\"Funny text goes here....\"\n                            value= {text.text }\n                            onChange={ props.handleTextChange.bind(this, text.id) }\n                        />\n\n                        <Tooltip title='Text Color' placement='top-start' arrow>  \n                            <input\n                                className=\"colorPicker inverted\"\n                                type=\"color\"\n                                name=\"bottomColor\"\n                                value={ text.color }\n                                onChange={ props.handleColorChange.bind(this, text.id) }\n                            />\n                        </Tooltip>\n          \n                        <Tooltip title='Border Color' placement='top-start' arrow>\n                            <input\n                                className=\"colorPicker inverted\"\n                                type=\"color\"\n                                name=\"bottomBorderColor\"\n                                value={ text.borderColor }\n                                onChange={ props.handleBorderColorChange.bind(this, text.id) }\n                            />\n                        </Tooltip>\n\n                        <input\n                            className=\"input textSize\"\n                            type=\"number\"\n                            name={ text.size }\n                            placeholder=\"Size\"\n                            value= { text.size }\n                            onChange={ props.handleTextSizeChange.bind(this, text.id) }\n                        />\n                    </div>\n                ))\n            }\n            \n            <div className='input-control'>\n                <button\n                    id='remove '\n                    className='inverted button'\n                    onClick={props.handleRemoveText}\n                >\n                    -\n                </button>\n                <button\n                    id='add'\n                    className='inverted button'\n                    onClick={props.handleAddText}\n                >\n                    +\n                </button>\n            </div>\n\n            <button\n                type='submit'\n                onClick={props.handleRandomMemeClick }\n                className='inverted button'\n            >\n                <MdShuffle /> Random\n            </button>\n            <button\n                type='submit'\n                onClick={handleDownloadClick}\n                className='inverted button'\n            >\n                <MdFileDownload /> download\n            </button>\n            <button\n                className='cutom-file-upload inverted button'\n                type='button'\n                onClick={() => {\n                  const input = document.getElementById('file-upload');\n                  input.click();\n                }}\n            >\n                {' '}\n                <MdFileUpload /> Upload\n            </button>\n            <input id='file-upload' type='file' onChange={props.handleFileChange} />\n        </form>\n    );\n}\n\nexport default displayMeme;\n","import React from 'react';\n\n\nfunction canvas(props){\n    return (\n        <div className=\"meme\">\n            <center>\n                <canvas \n                    id=\"my-canvas\" \n                    className=\"inverted\" \n                    width=\"568px\" height=\"335px\"\n                    />\n            </center>\n        </div>\n    )\n}\n\nexport default canvas","import React, { Component } from \"react\"\r\nimport DisplayMeme from './displayMeme'\r\nimport Canvas from './canvas'\r\n\r\nconst checkImageHeight = (width, height, maxHeight) => {\r\n    let newheight = height\r\n    let newwidth = width\r\n    if (height>maxHeight){\r\n        let ratio = maxHeight/height\r\n        newwidth = width * ratio\r\n        newheight = maxHeight\r\n    }\r\n    return {newheight, newwidth}\r\n}\r\n\r\n\r\nclass MemeGenerator extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            texts: [\r\n                {\r\n                    id: 0,\r\n                    text: \"\",\r\n                    color: \"#000000\",\r\n                    borderColor: \"#FFFFFF\",\r\n                    height: null,\r\n                    width: null,\r\n                    size: 30,\r\n                    x:250, \r\n                    y:50\r\n                },\r\n                {\r\n                    id: 1,\r\n                    text: \"\",\r\n                    color: \"#000000\",\r\n                    borderColor: \"#FFFFFF\",\r\n                    height: null,\r\n                    width: null,\r\n                    size: 30,\r\n                    x:250, \r\n                    y:300\r\n                },\r\n            ],\r\n            context: undefined, \r\n            canvas: undefined,\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            bottomColor: \"#000000\",\r\n            bottomBorderColor: \"#FFFFFF\",\r\n            height: 335,\r\n            width: 568,\r\n            url: \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs: [],\r\n            image: undefined,\r\n            maxHeight: Math.floor(window.innerHeight*0.8),\r\n            updateImage: false,\r\n            selectedText: -1\r\n        }\r\n        this.selectedText = -1;\r\n        this.startX = undefined;\r\n        this.startY = undefined;\r\n    }\r\n   \r\n    getPos = (el) => {\r\n        // yay readability\r\n        var lx=0,ly=0;\r\n        while(el!=null){\r\n            lx += el.offsetLeft \r\n            ly += el.offsetTop \r\n            el = el.offsetParent\r\n        }\r\n        return {x: lx,y: ly};\r\n    }\r\n\r\n    textHittest = (x, y, textIndex) => {\r\n        var text = this.state.texts[textIndex];\r\n        return (x >= text.x && x <= text.x + text.width && y >= text.y - text.height && y <= text.y);\r\n    }\r\n\r\n    handleMouseDown = (e) => {\r\n        console.log(this.state.texts);\r\n        e.preventDefault();\r\n        var offset, offsetX, offsetY;\r\n        const { texts, canvas } = this.state;\r\n        offset = this.getPos(canvas);\r\n        offsetX = offset.x\r\n        offsetY = offset.y\r\n        this.startX = parseInt(e.clientX - offsetX);\r\n        this.startY = parseInt(e.clientY - offsetY);\r\n        // console.log(offsetX, offsetY, e.clientX, e.clientY)\r\n\r\n        for (var i = 0; i < texts.length; i++) {\r\n            if (this.textHittest(this.startX, this.startY, i)) {\r\n                this.selectedText = i;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleMouseMove = (e) => {\r\n        e.preventDefault()\r\n        var { canvas } = this.state;\r\n        var offset, offsetX, offsetY, dx, dy;\r\n        offset = this.getPos(canvas);\r\n        offsetX = offset.x;\r\n        offsetY = offset.y;\r\n        var mouseX, mouseY\r\n        mouseX = parseInt(e.clientX - offsetX);\r\n        mouseY = parseInt(e.clientY - offsetY);\r\n        // Put your mousemove stuff here\r\n        dx = parseInt(mouseX - this.startX);\r\n        dy = parseInt(mouseY - this.startY);\r\n        // console.log(\"MouseMove\",dx,dy,this.startX,this.startY,mouseX,mouseY,offsetX,offsetY, mouseX-this.startX);\r\n        var texts = [...this.state.texts]\r\n        texts[this.selectedText].x += dx;\r\n        texts[this.selectedText].y += dy;\r\n        this.startX = mouseX;\r\n        this.startY = mouseY;\r\n        this.setState({ texts })\r\n    }\r\n\r\n    handleMouseUp = (e) => {\r\n        e.preventDefault();\r\n        this.selectedText = -1;\r\n    }\r\n    handleMouseOut = (e) => {\r\n        e.preventDefault();\r\n        this.selectedText = -1;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { url } = this.state\r\n        var canvas = document.getElementById(\"my-canvas\")\r\n        var context = canvas.getContext(\"2d\");\r\n        var image = new Image()\r\n        image.src = url \r\n        // console.log(image.src)\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            const { memes } = response.data\r\n            this.setState({ allMemeImgs: memes, image, canvas,context })\r\n        }).then( () => {\r\n\r\n            canvas.onmousedown = (e) => {\r\n                e.preventDefault();\r\n                this.handleMouseDown(e)\r\n            }\r\n\r\n            canvas.onmousemove  = (e) => {\r\n                e.preventDefault();\r\n                if(this.selectedText!==-1){\r\n                    this.handleMouseMove(e)\r\n                }\r\n            }\r\n         \r\n            canvas.onmouseup = (e) => {\r\n                e.preventDefault();\r\n                this.handleMouseUp(e);\r\n            }\r\n          \r\n            canvas.onmouseout = (e) => {\r\n                e.preventDefault();\r\n                this.handleMouseOut(e);\r\n            }\r\n        })\r\n    }\r\n    \r\n    componentDidUpdate = () => {\r\n        this.setImage()\r\n    }\r\n\r\n    setImage = () => {\r\n        const { image, texts, height, width, url, maxHeight } = this.state\r\n        var canvas = document.getElementById(\"my-canvas\")\r\n        var context = canvas.getContext(\"2d\");\r\n        // context.clearRect(0, 0, canvas.width, canvas.height);\r\n        image.src = url;\r\n        image.crossOrigin = \"anonymous\"\r\n        const { newheight, newwidth } = checkImageHeight(width, height, maxHeight);\r\n        image.onload = () => {\r\n            canvas.height = newheight\r\n            canvas.width = newwidth\r\n            context.drawImage(image, 0, 0, width, height, 0, 0, newwidth, newheight);\r\n            for (var i = 0; i < texts.length; i++) {\r\n                const { text, color, borderColor, x, y, size } = texts[i];\r\n                context.font = `${size}px impact, sans-serif`\r\n                context.strokeStyle = borderColor\r\n                context.strokeText(text, x, y)\r\n                context.fillStyle = color\r\n                context.fillText(text, x, y)\r\n            }\r\n        }\r\n    }\r\n    \r\n    handleColorChange = (i, event) => {\r\n        const { name, value } = event.target\r\n\r\n        setTimeout(() => {\r\n            var texts = [...this.state.texts];\r\n            texts[i].color = value; \r\n\r\n            this.setState({ [name]: value })\r\n        }, 250);\r\n    }\r\n\r\n    handleBorderColorChange = (i, event) => {\r\n        const { name, value } = event.target\r\n\r\n        setTimeout(() => {\r\n            var texts = [...this.state.texts];\r\n            texts[i].borderColor = value; \r\n\r\n            this.setState({ [name]: value })\r\n        }, 250);\r\n    }\r\n\r\n    \r\n\r\n    handleChange = (i, event, eventType) => {\r\n        var canvas = document.getElementById(\"my-canvas\")\r\n        var context = canvas.getContext(\"2d\");\r\n        const { value } = event.target\r\n        console.log(this.state.texts, value);\r\n        var texts = [...this.state.texts];\r\n        switch(eventType){\r\n            case \"text\":\r\n                context.font = `${texts[i].size}px impact, sans-serif`\r\n                texts[i].text = value;\r\n                break;\r\n            case \"size\":\r\n                context.font = `${value}px impact, sans-serif`\r\n                texts[i].size = value;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        var canvasText = context.measureText(texts[i].text);\r\n        console.log(context.measureText(value))\r\n        texts[i].width = canvasText.width;\r\n        texts[i].height = canvasText.actualBoundingBoxAscent + canvasText.actualBoundingBoxDescent;\r\n        this.setState({ texts })\r\n    }\r\n\r\n    handleTextChange = (i, event) => {\r\n        event.preventDefault()\r\n        var type = \"text\";\r\n        this.handleChange(i, event, type);\r\n    }\r\n\r\n    handleTextSizeChange = (i, event) => {\r\n        event.preventDefault()\r\n        this.handleChange(i, event, \"size\");\r\n    }\r\n\r\n    handleAddText = (event) => {\r\n        event.preventDefault()\r\n        var texts = [...this.state.texts]\r\n        texts.push({\r\n            id:texts.length,\r\n            text: \"\",\r\n            color: \"#000000\",\r\n            borderColor: \"#FFFFFF\",\r\n            x:50, \r\n            y:50,\r\n            height: null, \r\n            width: null,\r\n            size: 30\r\n        })\r\n        this.setState({ texts });\r\n    }\r\n\r\n    handleRemoveText = (event) => {\r\n        event.preventDefault()\r\n        var texts = this.state.texts.slice(0,-1);\r\n        this.setState({ texts });\r\n    }\r\n\r\n    handleRandomMemeClick = (event) => {\r\n        event.preventDefault()\r\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\r\n        const { url, width, height } = this.state.allMemeImgs[randNum]\r\n        this.setState({ url: url, width: width, height: height, updateImage: true})\r\n    }\r\n\r\n    handleFileChange = (event) => {\r\n        const scope = this;\r\n        const url = window.URL.createObjectURL(event.target.files[0])\r\n        const img = new Image();\r\n        img.onload = function() {\r\n            const { newheight, newwidth } = checkImageHeight(this.width, this.height)\r\n            scope.setState({ url, width: newwidth, height: newheight, updateImage: true })\r\n        }\r\n        img.src = url;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"memeRoot\">\r\n                <DisplayMeme \r\n                    state={ this.state } \r\n                    handleRandomMemeClick={ this.handleRandomMemeClick } \r\n                    handleTextChange={ this.handleTextChange }\r\n                    handleColorChange={ this.handleColorChange }\r\n                    handleBorderColorChange={ this.handleBorderColorChange }\r\n                    handleFileChange={ this.handleFileChange } \r\n                    handleAddText={ this.handleAddText }\r\n                    handleRemoveText={ this.handleRemoveText }\r\n                    handleTextSizeChange={ this.handleTextSizeChange }\r\n                />\r\n                <Canvas />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator","import React from 'react';\nimport { FaGithub, FaTwitter  } from 'react-icons/fa'\nimport { IconContext } from \"react-icons\";\n\nfunction Footer() {\n\n    return (\n        <div id=\"footer\">\n            <div id=\"left\">\n                <a href=\"https://twitter.com/jai_dewani\">\n                    <IconContext.Provider value={{color:\"rgb(29, 161, 242)\"}}>\n                        <div><FaTwitter/></div>\n                    </IconContext.Provider>\n                </a>\n            </div>\n            <div id=\"middle\">\n                Made with <span role=\"img\"aria-label=\"Red Heart\" >❤️</span> by <a href=\"https://github.com/jai-dewani\">Jai Kumar Dewani</a>                \n            </div>\n            <div id=\"right\">\n                <a href=\"https://github.com/jai-dewani/memeify\">\n                    <IconContext.Provider value={{color:\"black\"}}>\n                        <div><FaGithub/></div>\n                    </IconContext.Provider>\n                </a>\n            </div>      \n        </div>\n    )\n}\n\nexport default Footer","import React from \"react\"\r\nimport Header from \"./Components/Header\"\r\nimport MemeGenerator from \"./Components/MemeGen\"\r\nimport Footer from \"./Components/footer\";\r\nimport './App.css'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"app-container\" data-theme=\"dark\">\r\n            <Header />\r\n            <MemeGenerator />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}